% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/labelled.R
\name{labelled}
\alias{as_factor.labelled}
\alias{is.labelled}
\alias{labelled}
\alias{zap_labels}
\title{Create a labelled vector.}
\usage{
labelled(x, labels, is_na = NULL)

is.labelled(x)

\method{as_factor}{labelled}(x, levels = c("labels", "values"),
  ordered = FALSE, drop_na = TRUE, ...)

zap_labels(x)
}
\arguments{
\item{x}{A vector to label. Must be either numeric (integer or double) or
character.}

\item{labels}{A named vector. The vector should be the same type as
x. Unlike factors, labels don't need to be exhaustive: only a fraction
of the values might be labelled.}

\item{is_na}{Optionally, a logical vector describing which levels should
be translated to missing values.}

\item{levels}{When coercing a labelled character vector to a factor, you
can choose whether to use the labels or the values as the factor levels.}

\item{ordered}{If \code{TRUE} for ordinal factors, \code{FALSE} (the default)
for nominal factors.}

\item{drop_na}{If \code{TRUE}, the default, all types are missing value are
converted into \code{NA}. If \code{FALSE}, missing values will be left as
their original codes.}

\item{...}{Ignored}
}
\description{
A labelled vector is a common data structure in other statistical
environments. This class makes it possible to import such labelled vectors
in to without loss of fidelity. This class provides few methods, as I
expect you'll coerce to a standard R class (e.g. a \code{\link{factor}})
soon after importing.
}
\examples{
s1 <- labelled(c("M", "M", "F"), c(Male = "M", Female = "F"))
s2 <- labelled(c(1, 1, 2), c(Male = 1, Female = 2))

# Unfortunately it's not possible to make as.factor work for labelled objects
# so instead use as_factor. This works for all types of labelled vectors.
as_factor(s1)
as_factor(s1, labels = "values")
as_factor(s2)

# Other statistical software supports multiple types of missing values
s3 <- labelled(c("M", "M", "F", "X", "N/A"),
  c(Male = "M", Female = "F", Refused = "X", "Not applicable" = "N/A"),
  c(FALSE, FALSE, TRUE, TRUE)
)
s3
as_factor(s3)

# Often when you have a partially labelled numeric vector, labelled values
# are special types of missing. Use XXX to replace labels with missing
# values
x <- labelled(c(1, 2, 1, 2, 10, 9), c(Unknown = 9, Refused = 10))
zap_labels(x)
}

